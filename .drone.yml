---
kind: pipeline
type: exec
name: deploy-staging

platform:
  os: linux
  arch: amd64

steps:
  - name: check operation
    commands:
      - |
        echo "Received: $operation"
        if [ "$operation" != "deploy-staging" ]; then
          echo "Skipping pipeline - wrong operation"
          exit 78
        fi

  - name: deploy to staging
    environment:
      COMMAND:
        from_secret: deploy_staging_cmd
    commands:
      - |
        if [ -z "$version" ]; then
          echo "ERROR: VERSION parameter is required but not provided!"
          exit 1
        fi
      - CMD=$(echo "$COMMAND" | sed "s/VERSION/$version/g")
      - echo "CMD = $CMD"
      - eval $CMD

trigger:
  event:
    - custom

---
kind: pipeline
type: exec
name: deploy-production

platform:
  os: linux
  arch: amd64

steps:
  - name: check operation
    commands:
      - |
        echo "Received: $operation"
        if [ "$operation" != "deploy-production" ]; then
          echo "Skipping pipeline - wrong operation"
          exit 78
        fi

  - name: deploy to production
    environment:
      COMMAND:
        from_secret: deploy_prod_cmd
    commands:
      - |
        if [ -z "$version" ]; then
          echo "ERROR: VERSION parameter is required but not provided!"
          exit 1
        fi
      - CMD=$(echo "$COMMAND" | sed "s/VERSION/$version/g")
      - echo "CMD = $CMD"
      - eval $CMD

trigger:
  event:
    - custom

---
kind: pipeline
type: exec
name: run-e2e-tests

platform:
  os: linux
  arch: amd64

steps:
  - name: check operation
    commands:
      - |
        echo "Received: $operation"
        if [ "$operation" != "run-e2e-tests" ]; then
          echo "Skipping pipeline - wrong operation"
          exit 78
        fi

  - name: run e2e tests
    environment:
      URL:
        from_secret: staging_url
    commands:
      - ./ci/workflows/test-e2e.sh $URL

trigger:
  event:
    - custom

---
kind: pipeline
type: docker
name: notify

steps:
  - name: telegram
    image: appleboy/drone-telegram
    settings:
      token:
        from_secret: telegram_bot_token
      to:
        from_secret: telegram_user_id
      message: |
        üöÄ {{repo.name}} ‚ûú ${operation}
        üì¶ Version: ${version}
        {{#success build.status}}‚úÖ Success{{/success}}{{#failure build.status}}‚ùå Failed{{/failure}}
        ‚è∞ {{datetime build.finished "2006-01-02 15:04:05" "UTC"}}

depends_on:
  - deploy-staging
  - run-e2e-tests
  - deploy-production

trigger:
  status:
    - success
    - failure
  event:
    - custom
