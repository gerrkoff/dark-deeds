version: '3'

services:
  api-gateway:
    image: gerrkoff/dark-deeds-api-gateway:${BUILD_VERSION}
    ports:
      - 5000:5000
    environment:
      - ASPNETCORE_URLS=http://0.0.0.0:5000
    volumes:
      - ./settings/api-gateway-ocelot.json:/app/ocelot.Production.json
    depends_on:
      - consul
      - backend
      - auth-service
      - task-service
      - web-client

  auth-service:
    image: gerrkoff/dark-deeds-auth-service:${BUILD_VERSION}
    environment:
      - DD_SERVICE_DISCOVERY_HOST=auth-service
      - DD_SERVICE_DISCOVERY_PORT=5000
      - ASPNETCORE_URLS=http://0.0.0.0:5000
    volumes:
      - ./settings/auth-service-appsettings.json:/app/appsettings.Production.json
    depends_on:
      - consul
      - postgres-db

  task-service:
    image: gerrkoff/dark-deeds-task-service:${BUILD_VERSION}
    environment:
      - DD_SERVICE_DISCOVERY_HOST=task-service
      - DD_SERVICE_DISCOVERY_PORT=5000
      - ASPNETCORE_URLS=http://0.0.0.0:5000
    volumes:
      - ./settings/task-service-appsettings.json:/app/appsettings.Production.json
    depends_on:
      - consul
      - postgres-db
      - rabbit-mq

  backend:
    image: gerrkoff/dark-deeds-backend:${BUILD_VERSION}
    environment:
      - DD_SERVICE_DISCOVERY_HOST=backend
      - DD_SERVICE_DISCOVERY_PORT=5000
      - ASPNETCORE_URLS=http://0.0.0.0:5000
    volumes:
      - ./settings/backend-appsettings.json:/app/appsettings.Production.json
    depends_on:
      - consul
      - postgres-db
      - rabbit-mq

  web-client:
    image: gerrkoff/dark-deeds-web-client:${BUILD_VERSION}
    environment:
      - DD_SERVICE_DISCOVERY_HOST=web-client
      - DD_SERVICE_DISCOVERY_PORT=3000
    volumes:
      - ./settings/web-client-settings.json:/app/settings.json

  consul:
    image: consul:1.10
    ports:
      - 5001:8500

  rabbit-mq:
    image: rabbitmq:3-management-alpine
    ports:
      - 5002:15672
    volumes:
      - ./settings/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      
  postgres-db:
    image: postgres:13.0-alpine
    environment:
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data

  mongo-db:
    image: mongo:4.4
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - mongo-db-volume:/data/db

  prometheus:
    image: prom/prometheus:v2.32.1
    volumes:
      - ./settings/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-volume:/prometheus

  grafana:
    image: gerrkoff/dark-deeds-grafana:${BUILD_VERSION}
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=qwerty
    ports:
      - 5003:3000
    volumes:
      - grafana-volume:/var/lib/grafana
      - ./settings/grafana.yml:/etc/grafana/provisioning/datasources/grafana.yml:ro

volumes:
  postgres-db-volume:
  mongo-db-volume:
  grafana-volume:
  prometheus-volume:
