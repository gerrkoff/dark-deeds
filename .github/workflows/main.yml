name: CI

on: [push]

jobs:
  build-fe:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - name: Build FE
      run: |
        cd code/apps/WebClientApp/app
        npm install
        npm rebuild node-sass
        npm run test-ci
        npm run build
        cd ../server
        npm install

  build-be:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Build BE
      run: |
        dotnet test code/apps/TaskServiceApp/DarkDeeds.TaskServiceApp/DarkDeeds.TaskServiceApp.Tests/DarkDeeds.TaskServiceApp.Tests.csproj
        dotnet test code/apps/TelegramClientApp/DarkDeeds.TelegramClientApp/DarkDeeds.TelegramClientApp.Tests/DarkDeeds.TelegramClientApp.Tests.csproj
        dotnet publish -c Release code/apps/ApiGatewayApp/DarkDeeds.ApiGatewayApp/DarkDeeds.ApiGatewayApp.App/DarkDeeds.ApiGatewayApp.App.csproj
        dotnet publish -c Release code/apps/AuthServiceApp/DarkDeeds.AuthServiceApp/DarkDeeds.AuthServiceApp.App/DarkDeeds.AuthServiceApp.App.csproj
        dotnet publish -c Release code/apps/TaskServiceApp/DarkDeeds.TaskServiceApp/DarkDeeds.TaskServiceApp.App/DarkDeeds.TaskServiceApp.App.csproj
        dotnet publish -c Release code/apps/TelegramClientApp/DarkDeeds.TelegramClientApp/DarkDeeds.TelegramClientApp.App/DarkDeeds.TelegramClientApp.App.csproj
        dotnet publish -c Release code/apps/WebClientBffApp/DarkDeeds.WebClientBffApp/DarkDeeds.WebClientBffApp.App/DarkDeeds.WebClientBffApp.App.csproj

  build-e2e-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Build E2E Tests
      run: |
        dotnet build code/tests/e2e/DarkDeeds.E2eTests/DarkDeeds.E2eTests.csproj
