name: Build

on:
  push:
    branches: [ staging ]
  pull_request:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_PREFIX: ${{ github.repository }}

jobs:
  get-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version from script
        id: version
        run: |
          BRANCH_NAME="${{ github.event_name == 'pull_request' && github.head_ref || github.ref_name }}"
          echo "Using branch name: $BRANCH_NAME"
          VERSION=$(./ci/workflows/version.sh "$BRANCH_NAME")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Generated version: $VERSION"

  build-images:
    runs-on: ubuntu-latest
    needs: get-version
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        dockerfile:
          - app.dockerfile
          - tests-e2e.dockerfile
          - tests-load.dockerfile
          - mcp.dockerfile
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract image name
        id: extract-name
        run: |
          DOCKERFILE_NAME=${{ matrix.dockerfile }}
          IMAGE_NAME=${DOCKERFILE_NAME%.dockerfile}
          echo "image-name=$IMAGE_NAME" >> $GITHUB_OUTPUT
          echo "Image name: $IMAGE_NAME"

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_PREFIX }}/${{ steps.extract-name.outputs.image-name }}
          tags: |
            type=raw,value=${{ needs.get-version.outputs.version }}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/staging' }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ci/apps/${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILD_VERSION=${{ needs.get-version.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
