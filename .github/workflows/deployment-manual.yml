name: Deployment Manual

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to deploy (use "--" for rollback to previous version)'
        required: true
        type: string

jobs:
  deploy-or-rollback-production:
    runs-on: ubuntu-latest
    environment: prod
    permissions:
      contents: read
      actions: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Determine deployment version
        id: version
        run: |
          if [ "${{ inputs.version }}" = "--" ]; then
            echo "ðŸ”„ Rollback requested, getting previous version..."
            DEPLOY_VERSION=$(./ci/workflows/version-management.sh \
              "get-previous" \
              "${{ github.repository }}" \
              "${{ secrets.GITHUB_TOKEN }}")
            echo "Rolling back to version: $DEPLOY_VERSION"
          else
            echo "ðŸš€ Regular deployment requested..."
            DEPLOY_VERSION="${{ inputs.version }}"
            echo "Deploying version: $DEPLOY_VERSION"
          fi

          echo "version=$DEPLOY_VERSION" >> $GITHUB_OUTPUT

      # - name: Trigger Drone job
      #   id: operation
      #   run: |
      #     OUTPUT=$(./ci/workflows/drone-job-trigger.sh \
      #       "deploy-production" \
      #       "${{ steps.version.outputs.version }}" \
      #       "${{ github.ref_name }}" \
      #       "${{ secrets.DRONE_SERVER }}" \
      #       "${{ secrets.DRONE_TOKEN }}" \
      #       "${{ github.repository }}")
      #     echo "$OUTPUT"
      #     echo "$OUTPUT" | tail -1 >> $GITHUB_OUTPUT

      # - name: Wait for Drone job to complete
      #   run: |
      #     ./ci/workflows/drone-job-wait.sh \
      #       "${{ steps.operation.outputs.build_number }}" \
      #       "${{ secrets.DRONE_SERVER }}" \
      #       "${{ secrets.DRONE_TOKEN }}" \
      #       "${{ github.repository }}"

      - name: Update deployment version tracking
        run: |
          ./ci/workflows/version-management.sh \
            "update" \
            "${{ github.repository }}" \
            "${{ secrets.GITHUB_TOKEN }}" \
            "${{ steps.version.outputs.version }}"
