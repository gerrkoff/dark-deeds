name: Deployment Automatic

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Build"]
    types:
      - completed
    branches: [ staging ]

jobs:
  get-version:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version from script
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_run" ]; then
            BRANCH_NAME="${{ github.event.workflow_run.head_branch }}"
          else
            BRANCH_NAME="${{ github.ref_name }}"
          fi
          echo "Using branch name: $BRANCH_NAME"
          VERSION=$(./ci/workflows/version.sh "$BRANCH_NAME")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Generated version: $VERSION"

  deploy-staging:
    runs-on: ubuntu-latest
    needs: get-version
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Trigger Drone job
        id: operation
        run: |
          OUTPUT=$(./ci/workflows/drone-job-trigger.sh \
            "deploy-staging" \
            "${{ needs.get-version.outputs.version }}" \
            "${{ github.ref_name }}" \
            "${{ secrets.DRONE_SERVER }}" \
            "${{ secrets.DRONE_TOKEN }}" \
            "${{ github.repository }}")
          echo "$OUTPUT"
          echo "$OUTPUT" | tail -1 >> $GITHUB_OUTPUT

      - name: Wait for Drone job to complete
        run: |
          ./ci/workflows/drone-job-wait.sh \
            "${{ steps.operation.outputs.build_number }}" \
            "${{ secrets.DRONE_SERVER }}" \
            "${{ secrets.DRONE_TOKEN }}" \
            "${{ github.repository }}"

  run-e2e-tests:
    runs-on: ubuntu-latest
    needs: [get-version, deploy-staging]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Wait before running tests
        run: |
          echo "Waiting 10 seconds before starting E2E tests..."
          sleep 10

      - name: Trigger Drone job
        id: operation
        run: |
          OUTPUT=$(./ci/workflows/drone-job-trigger.sh \
            "run-e2e-tests" \
            "${{ needs.get-version.outputs.version }}" \
            "${{ github.ref_name }}" \
            "${{ secrets.DRONE_SERVER }}" \
            "${{ secrets.DRONE_TOKEN }}" \
            "${{ github.repository }}")
          echo "$OUTPUT"
          echo "$OUTPUT" | tail -1 >> $GITHUB_OUTPUT

      - name: Wait for Drone job to complete
        run: |
          ./ci/workflows/drone-job-wait.sh \
            "${{ steps.operation.outputs.build_number }}" \
            "${{ secrets.DRONE_SERVER }}" \
            "${{ secrets.DRONE_TOKEN }}" \
            "${{ github.repository }}"

  deploy-production:
    runs-on: ubuntu-latest
    needs: [get-version, run-e2e-tests]
    if: ${{ success() && github.event_name == 'workflow_run' }}
    environment: prod
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Trigger Drone job
        id: operation
        run: |
          OUTPUT=$(./ci/workflows/drone-job-trigger.sh \
            "deploy-production" \
            "${{ needs.get-version.outputs.version }}" \
            "${{ github.ref_name }}" \
            "${{ secrets.DRONE_SERVER }}" \
            "${{ secrets.DRONE_TOKEN }}" \
            "${{ github.repository }}")
          echo "$OUTPUT"
          echo "$OUTPUT" | tail -1 >> $GITHUB_OUTPUT

      - name: Wait for Drone job to complete
        run: |
          ./ci/workflows/drone-job-wait.sh \
            "${{ steps.operation.outputs.build_number }}" \
            "${{ secrets.DRONE_SERVER }}" \
            "${{ secrets.DRONE_TOKEN }}" \
            "${{ github.repository }}"
